@model Domain.Entities.Task

@{
    ViewBag.Title = "Create";
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<div class="modal fade" id="createTaskModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Create a new task</h4>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("CreateNewTask", "Tasks", null,
                    new AjaxOptions
                    {
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "POST",
                        UpdateTargetId = "list-of-tasks",
                        OnComplete = "updateSuccess"

                    }, new {id = "create-task-form"}))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EstimatedHours, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EstimatedHours, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.EstimatedHours, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StartDateTime, new {htmlAttributes = new {@class = "form-control", id="startDate"}})
                                @Html.ValidationMessageFor(model => model.StartDateTime, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new {@class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EndDateTime, new {htmlAttributes = new {@class = "form-control", id = "endDate" } })
                                @Html.ValidationMessageFor(model => model.EndDateTime, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new {@class = "form-control"})
                                @Html.ValidationMessageFor(model => model.Type, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new {@class = "form-control"})
                                @Html.ValidationMessageFor(model => model.Status, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Project", htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.DropDownList("ProjectId", null, htmlAttributes: new {@class = "form-control"})
                                @Html.ValidationMessageFor(model => model.ProjectId, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Username", htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.DropDownList("UserId", null, htmlAttributes: new {@class = "form-control"})
                                @Html.ValidationMessageFor(model => model.UserId, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default"/>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" id="modal-button-close" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

