@model ProjectManagement.Models.TasksByStatus

@{
    ViewBag.Title = "SeeTasks";
}

<h2>SeeTasks</h2>

<p>
    @Html.ActionLink("Create New", "CreateForProject", "Tasks", new {projectId = ViewBag.ProjectId}, null)
</p>


@*
    <table class="table">
        <tr>
            <th>To Do</th>
            <th>In Progress</th>
            <th>In Testing</th>
            <th>Done</th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>

                    @if (item.ToDo != null)
                    {
                        @: @item.ToDo.Name
                    }
                </td>
                <td>
                    @if (item.InProgress != null)
                    {
                        @: @item.InProgress.Name
                    }
                </td>
                <td>
                    @if (item.InTesting != null)
                    {
                        @: @item.InTesting.Name
                    }
                </td>
                <td>
                    @if (item.Done != null)
                    {
                        @: @item.Done.Name
                    }
                </td>
            </tr>
        }
    </table>

    <ul id="foo">
        <li>foo 1</li>
        <li>foo 2</li>
        <li>foo 3</li>
    </ul>

    <ul id="bar">
        <li>bar 1</li>
        <li>bar 2</li>
        <li>bar 3</li>
    </ul>
*@

<div class="row">
    <div class="col-xs-3" style="border: 10px">
        <p>ToDo</p>
        <ul id="todo" style="width: 300px; height: 300px; background-color: #82DDF0;">
            @foreach (var item in Model.ToDo)
            {
                <li id="@item.ID">@item.Name</li>
            }
        </ul>
    </div>

    <div class="col-xs-3">
        <p>In Progress</p>
        <ul id="inprogress" style="width: 300px; height: 300px; background-color: #ABC8C0">
            @foreach (var item in Model.InProgress)
            {
                <li id="@item.ID">@item.Name</li>
            }
        </ul>
    </div>

    <div class="col-xs-3">
        <p>In Testing (QA)</p>
        <ul id="intesting" style="width: 300px; height: 300px; background-color: #DAF7DC">
            @foreach (var item in Model.InTesting)
            {
                <li id="@item.ID">@item.Name</li>
            }
        </ul>
    </div>


    <div class="col-xs-3">
        <p>Done</p>
        <ul id="done" style="width: 300px; height: 300px; background-color: yellowgreen">
            @foreach (var item in Model.Done)
            {
                <li id="@item.ID">@item.Name</li>
            }
        </ul>
    </div>

</div>






   

    



@section styles
{
    <style>
        ul {list-style-type: none;}
        .grid .item img {
  cursor: move;
  cursor: -webkit-grabbing;
}
    </style>
}

@section Scripts {
        <script src="http://rubaxa.github.io/Sortable/Sortable.js"></script>

        <script>
            Sortable.create(todo, {
                group: {
                    name: 'todo',
                    put: ['inprogress', 'intesting']
                },
                animation: 100,

                onAdd: function (evt) {
                    $.ajax({
                        url: '/tasks/ChangeTaskStatusTo?id=' + evt.item.id + '&taskStatusId=0',
                        method: 'POST'
                    });
                }
            });

            Sortable.create(inprogress, {
                group: {
                    name: 'inprogress',
                    put: ['todo']
                },
                animation: 100,
                onAdd: function (evt) {
                    $.ajax({
                        url: '/tasks/ChangeTaskStatusTo?id=' + evt.item.id + '&taskStatusId=1',
                        method: 'POST'
                    });
                }
            });

            Sortable.create(intesting, {
                group: {
                    name: 'intesting',
                    put: ['todo', 'inprogress']
                },
                animation: 100,
                onAdd: function (evt) {
                    $.ajax({
                        url: '/tasks/ChangeTaskStatusTo?id=' + evt.item.id + '&taskStatusId=2',
                        method: 'POST'
                    });
                }
            });

            Sortable.create(done,
            {
                group: {
                    name: 'done',
                    put: ['inprogress', 'intesting']
                },
                animation: 100,
                onAdd: function (evt) {
                    $.ajax({
                        url: '/tasks/ChangeTaskStatusTo?id=' + evt.item.id + '&taskStatusId=3',
                        method: 'POST'
                    });
                }
            });


        </script>
    }



